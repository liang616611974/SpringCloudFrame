<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>spring-cloud-demo</artifactId>
        <groupId>com.liangfeng.study</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- 项目声明 -->
    <artifactId>spring-cloud-demo-service-goods</artifactId>
    <packaging>jar</packaging>
    <name>spring-cloud-demo-service-goods</name>
    <description>spring-cloud project for Spring Boot</description>

    <!-- 项目依赖 -->
    <dependencies>
        <!-- 项目其它模块 -->
        <dependency>
            <groupId>com.liangfeng.study</groupId>
            <artifactId>spring-cloud-demo-common-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.liangfeng.study</groupId>
            <artifactId>spring-cloud-demo-common-api</artifactId>
        </dependency>

        <!-- SpringCloud-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>

        <!-- 使用RabbitMQ收集数据 注意包名spring-cloud-netflix-hystrix-stream 而不是 spring-cloud-starter-hystrix-stream，不然不会产生数据-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-hystrix-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!--mysql jdbc驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>

        <!-- Mybatis 分页插件 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
        </dependency>


        <!-- log4jdbc-log4j2-jdbc4.1 打印数据源执行的sql日志 -->
        <dependency>
            <groupId>org.bgee.log4jdbc-log4j2</groupId>
            <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
        </dependency>

        <!-- Commons 工具 -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- swagger 接口测试框架-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>

        <!-- 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
    </dependencies>

    <!-- 配置文件环境配置 开始 -->
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <activeProfile>dev</activeProfile>
                <dockerHost>http://192.168.248.129:2375</dockerHost>
                <dockerTag>1.0.0</dockerTag>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <activeProfile>test</activeProfile>
                <!--<dockerHost>http://10.2.145.156:2375</dockerHost>-->
                <dockerHost>http://192.168.248.129:2375</dockerHost>
                <!-- <imageName>springcloud/${project.artifactId}</imageName>
                 <dockerDir>src/main/docker</dockerDir>-->
                <dockerTag>1.0.0</dockerTag>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <activeProfile>prod</activeProfile>
            </properties>
        </profile>
    </profiles>

      <!-- 构建应用配置-->
     <build>

         <plugins>

             <!-- 打包插件 -->
             <plugin>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
                 <version>1.5.7.RELEASE</version>
                 <executions>
                     <execution>
                         <goals>
                             <goal>repackage</goal>
                         </goals>
                     </execution>
                 </executions>
                 <configuration>
                     <includeSystemScope>true</includeSystemScope>
                     <executable>true</executable>
                 </configuration>
             </plugin>

             <!-- Docker Maven构建 -->
              <plugin>
                  <groupId>com.spotify</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <version>1.0.0</version>
                  <configuration>
                      <imageName>springcloud/${project.artifactId}</imageName>
                      <dockerDirectory>src/main/docker</dockerDirectory><!-- 指定 Dockerfile 路径-->
                      <dockerHost>${dockerHost}</dockerHost><!-- 指定 docker主机ip-->
                      <!--将jar包拷贝到 Dockerfile 所在的目录下-->
                      <resources>
                          <resource>
                              <!-- 这里的根目录是 Dockerfile 所在的目录-->
                              <targetPath>/</targetPath>
                              <directory>${project.build.directory}</directory>
                              <include>${project.build.finalName}.jar</include>
                          </resource>
                          <!-- <resource>
                               <targetPath>/</targetPath>
                               <directory>${project.basedir}/docker/tool</directory>
                               &lt;!&ndash;<include>*</include>&ndash;&gt;
                           </resource>-->
                      </resources>
                  </configuration>
                  <executions>
                      <execution>
                          <id>build-image</id>
                          <phase>package</phase>
                          <goals>
                              <goal>build</goal>
                          </goals>
                      </execution>
                      <execution>
                          <id>tag-image</id>
                          <phase>package</phase>
                          <goals>
                              <goal>tag</goal>
                          </goals>
                          <configuration>
                              <image>springcloud/${project.artifactId}</image>
                              <newName>springcloud/${project.artifactId}:${dockerTag}</newName>
                          </configuration>
                      </execution>
                      <execution>
                          <id>push-image</id>
                          <phase>deploy</phase>
                          <goals>
                              <goal>push</goal>
                          </goals>
                          <configuration>
                              <imageName>${dockerName}:${dockerTag}</imageName>
                          </configuration>
                      </execution>
                  </executions>
              </plugin>
         </plugins>

     </build>


</project>